#!/usr/bin/ruby

require 'rubygems'
require 'thor'
require 'brow'

module Brow
  class CLI < Thor
    include Thor::Actions
    default_task :help    

    map 'status' => 'list'
    map 'watch' => 'log'
    map 'smash' => 'wipe'

    desc "up", "Launch services"
    def up
      wrangler.up
    end

    desc "down", "Shut down services"
    def down
      wrangler.down
    end

    desc "start [SERVICE]", "Starts (or restarts) a service"
    def start(name = nil)
      restart(name)
    end

    desc "restart [SERVICE] [--hard]", "Restart a single service or toggle the whole enchilada"
    method_options :hard => :boolean, :alias => :string
    def restart(name = nil)
      if name
        wrangler.restart(name, options['hard'])
      else
        if options['hard']
          wrangler.down
          wrangler.up
        else
          wrangler.restart_all
        end
      end
    end

    desc "kill SERVICE", "Kills one service"
    def kill(name)
      wrangler.kill(name)
    end

    desc "list", "Show status for all configured services"
    def list
      running = wrangler.app_manager.running 
      wrangler.app_manager.application_names.each do |name|
        say "  #{name} #{running.include?(name) ? '(up)' : '(down)'}"
      end
      say "  nginx #{wrangler.proxy.running? ? '(up)' : '(down)'}"
    end

    desc "log [SERVICE]", "Tail one or all logs"
    def log(service = nil)
      services = nil
      if service
        services = [service]
      else
        services = wrangler.app_manager.applications.keys
      end
      grepregexp = services.join('\|')
      puts "Tailing logs for #{services.join(', ')}"
      puts "tail -f /var/log/system.log | grep \"#{grepregexp}\""
      Kernel.exec("tail -f /var/log/system.log | grep \"#{grepregexp}\"")
    end

    desc "exec COMMAND", "Execute a shell command in all mounted apps and pebbles"
    method_options :command => :array
    def exec(*command)
      command = command.join(' ')
      wrangler.app_manager.application_dirs.each do |dir|
        puts "#{dir}$ #{command}"
        Brow::ShellEnvironment.exec("#{command} 1>&2", dir)
        puts
      end
    end

    desc "dir SERVICE", "Returns the home directory of the given service: echo 'function cb { cd \"$(brow dir $1)\";}' >> ~/.bash_profile"
    def dir(service)
      app = wrangler.find(service)
      unless app
        STDERR.puts "#{service}, who?"
      else
        puts File.realpath(app.root)
      end
    end

    desc "update SERVICE", "Ensure that SERVICE is up to date (default is all)"
    def update(service = 'all')
      apps = []
      if service == 'all'
        apps += wrangler.applications.values
      else
        apps << wrangler.find(service)
      end

      results = []
      apps.each do |app|
        puts "** #{app.name}"
        output = app.update do |question|
          yes?(question)
        end

        output.split("\n").each do |line|
          puts line
        end
        puts
      end
    end

    desc "dependencies", "Returns list of dependencies for a service"
    def dependencies(service)
      wrangler.app_manager.dependencies(service)
    end

    desc "wipe", "Kill all unicorn, nginx and brow processes the brutal way."
    def wipe
      ["unicorn", "nginx", "brow"].each do |process_name|
        command = "sudo kill -9 `ps aux|grep #{process_name}|awk '{print $2}'`"
        puts command
        `#{command}`
        puts ""
      end
    end

    private

    def wrangler
      unless @wrangler
        @wrangler = Brow::Wrangler.new
        @wrangler.ensure_brow_folders
      end
      @wrangler
    end

  end
end

Brow::CLI.start
