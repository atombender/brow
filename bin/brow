#!/usr/bin/ruby

require 'rubygems'
require 'thor'
require 'brow'

module Brow
  class CLI < Thor
    include Thor::Actions
    default_task :help    

    map 'status' => 'list'

    desc "up", "Launch services"
    def up
      wrangler.up
    end

    desc "down", "Shut down services"
    def down
      wrangler.down
    end

    desc "start [SERVICE]", "Starts (or restarts) a service"
    def start(name = nil)
      restart(name)
    end

    desc "restart [SERVICE] [--hard]", "Restart a single service or toggle the whole enchilada"
    method_options :hard => :boolean, :alias => :string
    def restart(name = nil)
      if name
        wrangler.restart(name, options['hard'])
      else
        if options['hard']
          wrangler.down
          wrangler.up
        else
          wrangler.restart_all
        end
      end
    end

    desc "kill SERVICE", "Kills one service"
    def kill(name)
      wrangler.kill(name)
    end

    desc "list", "Show status for all configured services"
    def list
      running = wrangler.app_manager.running 
      wrangler.app_manager.application_names.each do |name|
        say "  #{name} #{running.include?(name) ? '(up)' : '(down)'}"
      end
      say "  nginx #{wrangler.proxy.running? ? '(up)' : '(down)'}"
    end

    desc "exec COMMAND", "Execute a shell command in all mounted apps and pebbles"
    method_options :command => :array
    def exec(*command)
      command = command.join(' ')
      wrangler.app_manager.application_dirs.each do |dir|
        puts "#{dir}$ #{command}"
        Brow::ShellEnvironment.exec("#{command} 1>&2", dir)
        puts
      end
    end

    desc "watch", "Watch all mounted apps for changes and reloading on demand"
    def watch
      # Tail stderr for all apps
      Thread.new { `tail -c 0 -f /tmp/brow-*.stderr.log 1>&2`}
      # ... then watch for changes in the file system
      wrangler.watch
    end

    private

    def wrangler
      unless @wrangler
        @wrangler = Brow::Wrangler.new
        @wrangler.ensure_brow_folders
      end
      @wrangler
    end

  end
end
Brow::CLI.start